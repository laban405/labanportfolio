{"version":3,"sources":["auth-header.js","httprequests.js","auth.js","views/SignIn/SignIn.js","common/constants.js","serviceWorker.js","helpers/chartjs.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/overrides/MuiMenuItem.js","theme/index.js","common/validators.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/Main.js","layouts/Main/components/Topbar/components/NavBar/NavBar.js","layouts/Main/components/Topbar/Topbar.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","ProtectedRoute.js","views/Account/components/AccountDetails/AccountDetails.js","views/Account/components/AccountProfile/AccountProfile.js","views/Account/Account.js","views/Home/components/Carousel/Carousel.js","views/Home/components/AboutUs/AboutUs.js","views/Home/Home.js","views/Home/components/LatestProducts/data.js","views/Home/components/LatestProducts/LatestProducts.js","views/Home/components/LatestSales/chart.js","views/Home/components/LatestSales/LatestSales.js","views/Home/components/ChampionBonus/ChampionBonus.js","views/Home/components/VIPAward/VIPAward.js","views/Home/components/BonusRewards/BonusRewards.js","views/Home/components/UsersByDevice/UsersByDevice.js","views/Icons/Icons.js","views/NotFound/NotFound.js","views/ProductList/components/ProductCard/ProductCard.js","views/ProductList/components/ProductsToolbar/ProductsToolbar.js","views/ProductList/data.js","views/ProductList/ProductList.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Password/Password.js","views/Settings/Settings.js","views/SignUp/SignUp.js","views/Typography/Typography.js","views/Transactions/components/TransactionsTable/TransactionsTable.js","helpers/getInitials.js","views/Transactions/data.js","views/Transactions/components/TransactionsToolbar/TransactionsToolbar.js","views/Transactions/Transactions.js","views/ResetPassword/ResetPassword.js","views/HomePage/components/Menu/Menu.js","views/HomePage/components/LandingSection/LandingSection.js","views/HomePage/components/Portfolio/components/ProjectCard/ProjectCard.js","views/HomePage/components/Portfolio/Portfolio.js","views/HomePage/HomePage.js","Routes.js","App.js","index.js"],"names":["authHeader","localStorage","getItem","getData","endpoint","a","axios","get","MAINURL","headers","registerUser","data","post","rejectUnauthorized","Auth","this","authenticated","cb","Alert","props","elevation","variant","schema","phonenumber","presence","allowEmpty","message","length","maximum","password","useStyles","makeStyles","theme","root","backgroundColor","palette","background","default","height","grid","quoteContainer","breakpoints","down","display","resetPassword","marginTop","spacing","quote","neutral","justifyContent","alignItems","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","textAlign","flexBasis","quoteText","color","white","fontWeight","name","bio","contentContainer","content","flexDirection","paddingLeft","paddingRight","contentHeader","paddingTop","paddingBototm","logoImage","marginLeft","contentBody","flexGrow","form","paddingBottom","title","socialButtons","socialIcon","marginRight","sugestion","textField","signInButton","margin","withRouter","history","classes","useState","isValid","values","touched","errors","formState","setFormState","open","setOpen","setMessage","isLoading","setIsLoading","severity","setSeverity","username","setUsername","setPassword","useEffect","validate","hasError","field","handleClose","event","reason","handleLogin","console","log","encrptedPass","Buffer","from","toString","url","Authorization","Accept","res","status","access_token","setItem","then","JSON","stringify","full_name","email","user_type_enum","membership_type_enum","phone_number","date_of_birth","verified","constituency","county","otp","residence","ward","gender","auth","login","push","className","container","item","lg","style","person","xs","onClick","goBack","error","fullWidth","helperText","label","onChange","e","target","value","type","gutterBottom","component","RouterLink","to","disabled","size","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Boolean","window","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","_chart","vm","_view","borderWidth","cornerRadius","config","options","base","x","y","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","black","newblack","primary","contrastText","dark","main","light","secondary","success","colors","green","info","blue","warning","orange","red","text","link","paper","icon","divider","grey","fontFamily","join","h1","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","typography","MuiTableHead","MuiTypography","marginBottom","MuiMenuItem","createMuiTheme","overrides","zIndex","appBar","drawer","checked","borderRadius","padding","input","SearchInput","rest","Paper","clsx","Input","disableUnderline","flexShrink","sm","md","danger","StatusBullet","defaultProps","RouteWithLayout","Layout","layout","Component","render","matchProps","justify","minHeight","avatar","blueGrey","fontWeightMedium","active","forwardRef","ref","media","actions","up","nav","minWidth","signOutButton","shiftContent","Main","children","useTheme","isDesktop","useMediaQuery","defaultMatches","Topbar","AppBar","position","Toolbar","Minimal","ProtectedRoute","isAuthenticated","pathname","state","AccountDetails","firstName","lastName","phone","country","Card","autoComplete","noValidate","CardHeader","Divider","CardContent","Grid","direction","details","progress","uploadButton","AccountProfile","user","locationText","dateText","Avatar","src","CardActions","Button","Account","xl","photo","Carousel","AboutUs","uuid","moment","subtract","image","chartContainer","difference","differenceIcon","differenceValue","stats","device","deviceIcon","heght","Home","iframe","border","Icons","maxWidth","NotFound","alt","imageContainer","overflow","statsItem","statsIcon","ProductCard","product","imageUrl","align","description","totalDownloads","row","spacer","importButton","exportButton","searchInput","ProductsToolbar","placeholder","id","updatedAt","createdAt","pagination","ProductList","mockData","products","map","key","IconButton","Notifications","subheader","wrap","FormControlLabel","control","Checkbox","defaultChecked","Password","confirm","setValues","handleChange","TextField","Settings","policy","policyCheckbox","signUpButton","dobdate","setDOBDate","setConstituency","setCounty","setEmail","fullname","setFullName","idnumber","setIDNumber","setPhoneNumber","religion","setReligion","setResidence","setWard","useForm","defaultValues","payer_id","roles","user_type","handleSubmit","register","reset","handleSignUp","showSnackBar","response","onSubmit","outdata","id_number","marital_status","InputLabel","htmlFor","formControl","as","Select","labelId","displayEmpty","m","MenuItem","defaultValue","utils","DateFnsUtils","inputVariant","format","date","toISOString","split","KeyboardButtonProps","policyText","Link","underline","FormHelperText","Snackbar","variants","Typography","Object","keys","inner","nameContainer","TransactionsTable","users","selectedUsers","setSelectedUsers","rowsPerPage","setRowsPerPage","page","setPage","Table","TableHead","TableRow","TableCell","indeterminate","TableBody","slice","tableRow","hover","selected","selectedIndex","newSelectedUsers","concat","handleSelectOne","avatarUrl","replace","v","toUpperCase","getInitials","address","city","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","street","TransactionsList","bgcolor","CssTextField","withStyles","useHistory","emailScreen","setEmailscreen","otpScreen","setOtpScreen","handleReset","submitOTP","required","inputRef","InputProps","startAdornment","InputAdornment","code","new_password","href","Box","spaceItem","menuItem","MyMenuItem","Menu","homeSection","useScrollSection","aboutSection","portfolioSection","workSection","funSection","updateSelected","activeSection","marginAutoContainer","marginAutoItem","landingtext","LandingSection","params","particles","line_linked","number","interactivity","events","onhover","enable","mode","duration","cardtitle","cardsubtitle","ProjectCard","div","whileHover","scale","whileTap","cardsContainer","clients","Portfolio","HomePage","Routes","exact","HomePageView","MainLayout","path","HomeView","TransactionsView","ProductListView","TypographyView","IconsView","AccountView","SettingsView","SignUpView","MinimalLayout","SignInView","ResetPasswordView","NotFoundView","browserHistory","createBrowserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validators","App","ThemeProvider","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1aba3ed.chunk.js","sourcesContent":["export default function authHeader() {\n  const token = localStorage.getItem('access_token');\n\n\n  return {\n    'Authorization': 'Bearer'+ token,\n   'Content-type': 'application/json',\n  'Accept': 'application/json',\n  };\n\n}","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { MAINURL } from 'common/constants';\n//import authHeaderFile from \"auth-headerfile\";\n\nfunction authRegHeader() {\n\n  return {\n    'Content-type': 'application/json',\n    'Accept': 'application/json',\n  };\n\n}\n\n\nexport const downloadFile=async(endpoint)=>{\n  return await axios({\n    url: MAINURL + endpoint,\n    method: 'GET',\n    responseType: 'blob', // important\n    headers: authHeader(),\n    rejectUnauthorized: false\n  }).then((response) => {\n    console.log('download response', JSON.stringify(response));\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'file.pdf');\n    document.body.appendChild(link);\n    link.click();\n  });\n}\n\n\n\nexport const getLiveData = async (endpoint, payerId) => {\n  return await axios.get(MAINURL + endpoint + '?payerId=' + payerId, { headers: authHeader() });\n};\n\n\nexport const getData = async (endpoint) => {\n  return await axios.get(MAINURL + endpoint, { headers: authHeader() });\n};\n\nexport const postData = async (endpoint, data) => {\n  console.log('headers',JSON.stringify( authHeader()))\n\n  return await axios.post(MAINURL + endpoint, data, { headers: authHeader() ,rejectUnauthorized: false});\n};\n\nexport const deleteData = async (endpoint) => {\n  return await axios.delete(MAINURL + endpoint, { headers: authHeader(),rejectUnauthorized: false });\n\n};\n\nexport const putData = async (endpoint) => {\n  return await axios({ method: 'put', url: MAINURL + endpoint, headers: authHeader(),rejectUnauthorized: false })\n  //axios.put(MAINURL+endpoint, { headers: authHeader() });\n\n};\n\nexport const putDataLoad = async (endpoint,data) => {\n  return await axios({ method: 'put', data:data, url: MAINURL + endpoint, headers: authHeader(),rejectUnauthorized: false })\n  //axios.put(MAINURL+endpoint, { headers: authHeader() });\n\n};\n\n\nexport const registerUser = async (endpoint, data) => {\n  return await axios.post(MAINURL + endpoint, data, { headers: authRegHeader(),rejectUnauthorized: false });\n};\n\nexport const getRegisterData = async (endpoint) => {\n  return await axios.get(MAINURL + endpoint, { headers: authRegHeader(),rejectUnauthorized: false });\n};\n\n// export const uploadFiles= async(endpoint, data)=>{\n//   return await axios.post(MAINURL + endpoint, data, { headers: authHeaderFile() });\n// }\n\n\n\n","class Auth {\n    constructor() {\n      this.authenticated = true;\n    }\n  \n    login(cb) {\n      this.authenticated = true;\n      cb();\n    }\n  \n    logout(cb) {\n      this.authenticated = false;\n      cb();\n    }\n  \n    isAuthenticated() {\n      return this.authenticated;\n    }\n  }\n  \n  export default new Auth();","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Button,\n  IconButton,\n  TextField,\n  Link,\n  Typography,\n  Snackbar\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport axios from 'axios';\nimport { getData } from 'httprequests';\nimport auth from 'auth.js';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst schema = {\n  phonenumber: {\n    presence: { allowEmpty: false, message: 'is required' },\n    //email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 128\n    }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  resetPassword: {\n    marginTop: theme.spacing(2)\n},\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.down('md')]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    marginLeft: theme.spacing(4)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(1)\n  },\n  socialButtons: {\n    marginTop: theme.spacing(3)\n  },\n  socialIcon: {\n    marginRight: theme.spacing(1)\n  },\n  sugestion: {\n    marginTop: theme.spacing(2)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  signInButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignIn = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  \n  const [severity, setSeverity] = useState('success');\n  \n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  // const handleSignIn = event => {\n  //   event.preventDefault();\n  //   history.push('/');\n  // };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n    const showSnackBar = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      setOpen(false);\n    };\n\n  const handleLogin = async () => {\n    console.log(username + password);\n\n    console.log('is loadin 1 ' + isLoading);\n    let data = {};\n\n    setIsLoading(true);\n    //http://54.202.230.57:8081/swagger-ui.html\n    try {\n      const musername = 'testjwtclientid';\n      const mpassword = 'XY7kmzoNzl100';\n      const encrptedPass = Buffer.from(\n        `${musername}:${mpassword}`,\n        'utf8'\n      ).toString('base64');\n      //http://18.218.36.165:8081\n      const url = `http://18.218.36.165:8081/oauth/token?grant_type=password&username=${username}&password=${password}`;\n      console.log('encrypred pass' + encrptedPass);\n\n      const res = await axios.post(url, data, {\n        headers: {\n          Authorization: `Basic ${encrptedPass}`,\n          'Content-type': 'application/json',\n          Accept: 'application/json'\n        },\n        rejectUnauthorized: false\n      });\n      console.log('access_token status', res.status);\n\n      if (res.data.access_token) {\n        console.log('access_token', res.data.access_token);\n        localStorage.setItem('access_token', res.data.access_token);\n        getData('users').then(res => {\n          console.log('profile data>>>>>' + JSON.stringify(res.data));\n          if (res.status === 200) {\n            localStorage.setItem('username', res.data.username);\n            localStorage.setItem('fullname',res.data.full_name);\n            localStorage.setItem('email', res.data.email);\n            localStorage.setItem('usertype', res.data.user_type_enum);\n            localStorage.setItem('membertype', res.data.membership_type_enum);\n            localStorage.setItem('phonenumber', res.data.phone_number);\n            localStorage.setItem('dob', res.data.date_of_birth);\n            localStorage.setItem('verified', res.data.verified);\n            localStorage.setItem('constituency', res.data.constituency);\n            localStorage.setItem('county', res.data.county);\n            localStorage.setItem('otp', res.data.otp);\n            localStorage.setItem('residence', res.data.residence);\n            localStorage.setItem('ward', res.data.ward);\n            localStorage.setItem('gender', res.data.gender);\n            auth.login(() => {\n              history.push('/');\n              // props.history.push(\"/app\");\n            });\n         }\n\n          console.log('stop get profile');\n       });\n      } else if(res.status===400){\n        \n        setSeverity('error');\n        setOpen(true);\n        setMessage('Invalid login credentials');\n      }\n       else {\n\n        setSeverity('error');\n        setOpen(true);\n        setMessage('Invalid login credentials');\n      }\n    } catch (err) {\n      setSeverity('error');\n      setIsLoading(false);\n      console.log('error' + err);\n      setOpen(true);\n      setMessage(\"Invalid login credentials\");\n    }\n\n    setIsLoading(false);\n\n    console.log('is loadin 2 ' + isLoading);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid className={classes.grid} container>\n        <Grid className={classes.quoteContainer} item lg={5}>\n          <div className={classes.quote}>\n            <div className={classes.quoteInner}>\n              <Typography\n                className={classes.quoteText}\n                variant=\"h1\"\n                style={{\n                  color: '#1034a6'\n                }}>\n                Welcome text goes here\n              </Typography>\n              <div className={classes.person}>\n                <Typography\n                  className={classes.name}\n                  variant=\"body1\"\n                  style={{\n                    color: '#1034a6'\n                  }}>\n                  Sample text\n                </Typography>\n                <Typography\n                  className={classes.bio}\n                  variant=\"body2\"\n                  style={{\n                    color: '#1034a6'\n                  }}>\n                  Sample text\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </Grid>\n\n        <Grid className={classes.content} item lg={7} xs={12}>\n          <div className={classes.content}>\n            <div className={classes.contentHeader}>\n              <IconButton onClick={handleBack}>\n                <ArrowBackIcon />\n              </IconButton>\n            </div>\n            <div className={classes.contentBody}>\n              <form className={classes.form} \n              // onSubmit={()=>\n              //   handleLogin\n              //   }\n                >\n                <Typography className={classes.title} variant=\"h2\">\n                  Sign in\n                </Typography>\n\n                <TextField\n                  className={classes.textField}\n                  error={hasError('phonenumber')}\n                  fullWidth\n                  helperText={\n                    hasError('phonenumber')\n                      ? formState.errors.phonenumber[0]\n                      : null\n                  }\n                  label=\"Phone Number\"\n                  name=\"phonenumber\"\n                  onChange={e => setUsername(e.target.value)}\n                  type=\"text\"\n                  //value={formState.values.phonenumber || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('password')}\n                  fullWidth\n                  helperText={\n                    hasError('password') ? formState.errors.password[0] : null\n                  }\n                  label=\"Password\"\n                  name=\"password\"\n                  onChange={e => setPassword(e.target.value)}\n                  type=\"password\"\n                  //value={formState.values.password || ''}\n                  variant=\"outlined\"\n                />\n                <Typography gutterBottom color=\"textSecondary\" variant=\"body1\"\n                                    className={\n                                        classes.resetPassword\n                                    }>\n                                    Forgot your password?{' '}\n                                    <Link style={\n                                        { color: \"#1034a6\" }\n                                    }\n                                        component={RouterLink}\n                                        to=\"/reset-password\"\n                                        variant=\"h6\">\n                                        Reset Password\n                                    </Link>\n                                </Typography>\n                <Button\n                  className={classes.signInButton}\n                  color=\"primary\"\n                  disabled={isLoading}\n                  fullWidth\n                  size=\"large\"\n                  //type=\"submit\"\n                  variant=\"contained\"\n                  onClick={() => handleLogin()}\n                  >\n                  {isLoading ? (\n                    <div>Please Wait...</div>\n                  ) : (\n                    <div>Sign in now</div>\n                  )}\n                </Button>\n                <Typography color=\"textSecondary\" variant=\"body1\">\n                  Don't have an account?{' '}\n                  <Link component={RouterLink} to=\"/sign-up\" variant=\"h6\">\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"Note archived\">\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignIn);\n","const MAINURL = \"http://18.218.36.165:8081/api/\";\nconst USERNAME = localStorage.getItem('userName');\nconst EMAIL = localStorage.getItem('userEmail');\nconst PAYERID = localStorage.getItem('payerID');\nconst PHONE = localStorage.getItem('userPhone');\n\n//http://54.202.230.57:8081\n\n//https://portal.mrescue.co.ke/swagger-ui.html\n\n\nexport {\n    MAINURL,\n    USERNAME,\n    EMAIL,\n    PHONE,\n    PAYERID\n};\n//http://52.212.118.95:18080/api/users","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft =\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight =\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom =\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nexport default {\n  draw\n};\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\nconst newblack=\"#1E1B18\"\nexport default {\n  black,\n  white,\n  newblack,\n  primary: {\n    contrastText: white,\n    dark: '#1a1b41',\n    main: '#1a1b41',\n    light: '#1a1b41'\n  },\n  secondary: {\n    contrastText: white,\n    dark: \"#fb5012\",\n    main: \"#fb5012\",\n    light: \"#fb5012\"\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: \"#2e2e2e\",\n    secondary: \"#2e2e2e\",\n    link: '#fb5012'\n  },\n  background: {\n    default: '#ffffff',\n    paper: white\n  },\n  icon: \"#fb5012\",\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  fontFamily: [\n    'Montserrat', \n    'sans-serif'\n  ].join(','),\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\nimport MuiMenuItem from './MuiMenuItem';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography,\n  MuiMenuItem\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","export default {\n    root: {\n        \"&$selected\": {       // this is to refer to the prop provided by M-UI\n          backgroundColor: \"#1a1b41\",\n          color:\"white\" // updated backgroundColor\n        },\n      },\n  };","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","const checked = (value, options) => {\n  if (value !== true) {\n    return options.message || 'must be checked';\n  }\n};\n\nexport default {\n  checked\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: '4px',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    display: 'flex',\n    flexBasis: 420\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary\n  },\n  input: {\n    flexGrow: 1,\n    fontSize: '14px',\n    lineHeight: '16px',\n    letterSpacing: '-0.05px'\n  }\n}));\n\nconst SearchInput = props => {\n  const { className, onChange, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n      style={style}\n    >\n      <SearchIcon className={classes.icon} />\n      <Input\n        {...rest}\n        className={classes.input}\n        disableUnderline\n        onChange={onChange}\n      />\n    </Paper>\n  );\n};\n\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-block',\n    borderRadius: '50%',\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  sm: {\n    height: theme.spacing(1),\n    width: theme.spacing(1)\n  },\n  md: {\n    height: theme.spacing(2),\n    width: theme.spacing(2)\n  },\n  lg: {\n    height: theme.spacing(3),\n    width: theme.spacing(3)\n  },\n  neutral: {\n    backgroundColor: theme.palette.neutral\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  info: {\n    backgroundColor: theme.palette.info.main\n  },\n  warning: {\n    backgroundColor: theme.palette.warning.main\n  },\n  danger: {\n    backgroundColor: theme.palette.error.main\n  },\n  success: {\n    backgroundColor: theme.palette.success.main\n  }\n}));\n\nconst StatusBullet = props => {\n  const { className, size, color, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <span\n      {...rest}\n      className={clsx(\n        {\n          [classes.root]: true,\n          [classes[size]]: size,\n          [classes[color]]: color\n        },\n        className\n      )}\n    />\n  );\n};\n\nStatusBullet.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'neutral',\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'danger'\n  ]),\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n};\n\nStatusBullet.defaultProps = {\n  size: 'md',\n  color: 'default'\n};\n\nexport default StatusBullet;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4),\n    alignItems:\"center\",\n    justify:\"center\",\n    \n  }\n}));\n\nconst Footer = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography variant=\"body1\">\n        &copy;{' '}\n        <Link\n          component=\"a\"\n          href=\"https://philial.org/\"\n          target=\"_blank\"\n        >\n          Philial \n        </Link>\n        . 2020\n      </Typography>\n      <Typography variant=\"caption\">\n        Created with love for the environment. By designers and developers who\n        love to work together !\n      </Typography>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Profile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: 'Shen Zhi',\n    avatar: '/images/avatars/avatar_11.png',\n    bio: 'Brain Director'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        className={classes.avatar}\n        component={RouterLink}\n        src={user.avatar}\n        to=\"/settings\"\n      />\n      <Typography\n        className={classes.name}\n        variant=\"h4\"\n      >\n        {user.name}\n      </Typography>\n      <Typography variant=\"body2\">{user.bio}</Typography>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {pages.map(page => (\n        <ListItem\n          className={classes.item}\n          disableGutters\n          key={page.title}\n        >\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}\n          >\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: colors.grey[50]\n  },\n  media: {\n    paddingTop: theme.spacing(2),\n    height: 80,\n    textAlign: 'center',\n    '& > img': {\n      height: '100%',\n      width: 'auto'\n    }\n  },\n  content: {\n    padding: theme.spacing(1, 2)\n  },\n  actions: {\n    padding: theme.spacing(1, 2),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst UpgradePlan = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.media}>\n        <img\n          alt=\"Upgrade to PRO\"\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\n        />\n      </div>\n      <div className={classes.content}>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h6\"\n        >\n          Upgrade to PRO\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Upgrade to Devias Kit PRO and get even more components\n        </Typography>\n      </div>\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component=\"a\"\n          href=\"https://devias.io/products/devias-kit-pro\"\n          variant=\"contained\"\n        >\n          Upgrade\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUpgradePlan.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UpgradePlan;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport { Profile, SidebarNav, UpgradePlan } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const pages = [\n    {\n      title: 'Dashboard',\n      href: '/dashboard',\n      icon: <DashboardIcon />\n    },\n    {\n      title: 'Transactions',\n      href: '/transactions',\n      icon: <PeopleIcon />\n    },\n    {\n      title: 'Products',\n      href: '/products',\n      icon: <ShoppingBasketIcon />\n    },\n    // {\n    //   title: 'Authentication',\n    //   href: '/sign-in',\n    //   icon: <LockOpenIcon />\n    // },\n    {\n      title: 'Typography',\n      href: '/typography',\n      icon: <TextFieldsIcon />\n    },\n    {\n      title: 'Icons',\n      href: '/icons',\n      icon: <ImageIcon />\n    },\n    {\n      title: 'Account',\n      href: '/account',\n      icon: <AccountBoxIcon />\n    },\n    {\n      title: 'Settings',\n      href: '/settings',\n      icon: <SettingsIcon />\n    }\n  ];\n\n  return (\n    <Drawer\n      anchor=\"top\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <Profile />\n        <Divider className={classes.divider} />\n        <SidebarNav\n          className={classes.nav}\n          pages={pages}\n        />\n        {/* <UpgradePlan /> */}\n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\n\nexport default Sidebar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { Sidebar, Topbar, Footer } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor:\"white\",\n    //paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 0\n    }\n  },\n  shiftContent: {\n    backgroundColor:\"white\",\n    //paddingLeft: \"auto\"\n  },\n  content: {\n    height: '100%',\n    backgroundColor:\"white\",\n  }\n}));\n\nconst Main = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? false : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}\n    >\n      {/* <Topbar onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n      /> */}\n      <main className={classes.content}>\n        {children}\n        {/* <Footer /> */}\n      </main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  flexDirection: 'row',\n  padding: 0,\n  },\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginRight:10,\n    minWidth:80\n  },\n  button: {\n    \n    color: colors.grey[600],\n    padding: '10px 8px',\n    justifyContent: 'center',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium,\n    '&:hover': {\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor:theme.palette.primary.dark,\n     color: theme.palette.secondary.main,\n      '& $icon': {\n        color: colors.grey[400],\n      },}\n   \n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    backgroundColor:theme.palette.primary.dark,\n    color: theme.palette.white,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.white\n    },\n    '&:hover': {\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.secondary.dark,\n      color:  \"#ffffff\",\n      '& $icon': {\n        color:\"#ffffff\",\n      },}\n    \n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\nconst NavBar = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {pages.map(page => (\n        <ListItem\n          className={classes.item}\n          disableGutters\n          key={page.title}\n        >\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}\n          >\n            {/* <div className={classes.icon}>{page.icon}</div> */}\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nNavBar.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport {Typography} from '@material-ui/core';\n\nimport { NavBar } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //boxShadow: 'none'\n    backgroundColor:theme.palette.primary.dark,\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const pages = [\n    {\n      title: 'Home',\n      href: '/home',\n      icon: <DashboardIcon />\n    },\n    {\n      title: 'Services',\n      href: '/transactions',\n      icon: <PeopleIcon />\n    },\n    {\n      title: 'Skills',\n      href: '/products',\n      icon: <ShoppingBasketIcon />\n    },\n    // {\n    //   title: 'Authentication',\n    //   href: '/sign-in',\n    //   icon: <LockOpenIcon />\n    // },\n    {\n      title: 'Projects',\n      href: '/typography',\n      icon: <TextFieldsIcon />\n    },\n    {\n      title: 'About',\n      href: '/icons',\n      icon: <ImageIcon />\n    },\n    // {\n    //   title: 'Projects',\n    //   href: '/account',\n    //   icon: <AccountBoxIcon />\n    // },\n    // {\n    //   title: 'Settings',\n    //   href: '/settings',\n    //   icon: <SettingsIcon />\n    // }\n  ];\n  const { className, onSidebarOpen, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      {...rest}\n      elevation=\"0\"\n      className={clsx(classes.root, className)}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n        <Typography color=\"secondary\" variant=\"h4\">Laban</Typography>\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        <Hidden mdDown>\n        <NavBar\n          className={classes.nav}\n          pages={pages}\n        />\n          {/* <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton\n            className={classes.signOutButton}\n            color=\"inherit\"\n          >\n            <InputIcon />\n          </IconButton> */}\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onSidebarOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func\n};\n\nexport default Topbar;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    boxShadow: 'none'\n  }\n}));\n\nconst Topbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Typography style={{color:'#fff'}} variant=\"h4\">Philial Logo Here</Typography>\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Topbar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 64,\n    height: '100%'\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Minimal = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Minimal;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./auth\";\nimport PropTypes from 'prop-types';\n\nconst ProtectedRoute = (props) => {\n   const {layout: Layout,\n        component: Component,\n        ...rest\n      }=props;\n\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => {\n        if (auth.isAuthenticated()) {\n          return <Layout><Component {...matchProps} /></Layout>;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/sign-in\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nProtectedRoute.propTypes = {\n    component: PropTypes.any.isRequired,\n    layout: PropTypes.any.isRequired,\n    path: PropTypes.string\n  };\n  \nexport default ProtectedRoute;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField,\n  Typography\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    firstName: 'Shen',\n    lastName: 'Zhi',\n    email: 'shen.zhi@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const states = [\n    {\n      value: 'alabama',\n      label: 'Alabama'\n    },\n    {\n      value: 'new-york',\n      label: 'New York'\n    },\n    {\n      value: 'san-francisco',\n      label: 'San Francisco'\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form\n        autoComplete=\"off\"\n        noValidate\n      >\n        <CardHeader\n          //subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n            direction=\"column\"\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n               <Typography variant=\"subtitle2\">Balance</Typography>\n               <Typography variant=\"h5\">KSH. 40,000</Typography>\n           \n              {/* <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                margin=\"dense\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              /> */}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n               <Typography variant=\"subtitle2\">Next Due Payment Date</Typography>\n               <Typography variant=\"h5\">21-02-2020</Typography>\n              {/* <TextField\n                fullWidth\n                label=\"Last name\"\n                margin=\"dense\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              /> */}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n               <Typography variant=\"subtitle2\">Next Due Payment Amount</Typography>\n               <Typography variant=\"h5\">KSH. 3000</Typography>\n              {/* <TextField\n                fullWidth\n                label=\"Email Address\"\n                margin=\"dense\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              /> */}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              {/* <TextField\n                fullWidth\n                label=\"Phone Number\"\n                margin=\"dense\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              /> */}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              {/* <TextField\n                fullWidth\n                label=\"Select State\"\n                margin=\"dense\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map(option => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField> */}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              {/* <TextField\n                fullWidth\n                label=\"Country\"\n                margin=\"dense\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              /> */}\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        {/* <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </CardActions> */}\n      </form>\n    </Card>\n  );\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AccountDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Typography,\n  Divider,\n  Button,\n  LinearProgress\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  avatar: {\n    marginLeft: 'auto',\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst AccountProfile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: 'John Doe',\n    email: 'johndoe@gmail.com',\n    phonenumber: '0797313732',\n    //timezone: 'GTM-7',\n    avatar: '/images/avatars/avatar_11.png'\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <div className={classes.details}>\n          <div>\n            <Typography\n              gutterBottom\n              variant=\"h2\"\n            >\n              John Doe\n            </Typography>\n            <Typography\n              className={classes.locationText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {user.email}\n            </Typography>\n            <Typography\n              className={classes.dateText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {user.phonenumber}\n            </Typography>\n          </div>\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n        </div>\n        {/* <div className={classes.progress}>\n          <Typography variant=\"body1\">Profile Completeness: 70%</Typography>\n          <LinearProgress\n            value={70}\n            variant=\"determinate\"\n          />\n        </div> */}\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.uploadButton}\n          color=\"primary\"\n          variant=\"text\"\n        >\n          Referrals\n        </Button>\n        <Button color=\"primary\" variant=\"text\">Transactions</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AccountProfile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { AccountProfile, AccountDetails } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={4}\n          xs={12}\n        >\n          <AccountProfile />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={6}\n          xl={8}\n          xs={12}\n        >\n          <AccountDetails />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Typography,\n  Paper,\n  Grid,\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel,\n} from \"@material-ui/core\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nimport { StatusBullet } from \"components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.primary.dark,\n    height: 500,\n   // marginBottom: 3,\n    paddingTop: 80,\n    //marginBottom: 30,\n    paddingLeft: 40,\n  },\n  name: {\n    color: theme.palette.white,\n    //marginTop: 80,\n    //marginBottom: 30,\n    //marginLeft: 40,\n    fontSize: 24,\n  },\n  title: {\n    color: theme.palette.secondary.dark,\n    marginTop: 20,\n    //marginBottom: 30,\n    //marginLeft: 40,\n    fontSize: 24,\n    //fontWeight:\n  },\n  photo: {\n    height: 300,\n    width: 300,\n    marginTop: 20,\n    //marginLeft: 40,\n    marginBottom: 30,\n    //marginLeft: 40,\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n\nconst statusColors = {\n  delivered: \"success\",\n  pending: \"info\",\n  refunded: \"danger\",\n};\n\nconst Carousel = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n    \n       <Grid container \n       //spacing={2}\n       >\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\n        <Paper\n          elevation={3}\n          //  variant=\"outlined\"\n          className={classes.photo}\n        >\n\n\n        <Typography className={classes.name}> Hi, I am Laban</Typography>\n        <Typography className={classes.title}>\n         \n          Software Developer | UI/UX Designer\n        </Typography>\n        </Paper>\n        </Grid>\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\n        <Paper\n          elevation={3}\n          //  variant=\"outlined\"\n          className={classes.photo}\n        >\n\n\n        </Paper>\n        </Grid>\n       \n      </Grid>\n    </div>\n  );\n};\n\nCarousel.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Carousel;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel,\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nimport { StatusBullet } from \"components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor:theme.palette.primary.dark,\n    // height: \"500px\",\n    //marginTop:\"50px\",\n    paddingBottom: 10,\n    paddingTop: 30,\n    paddingLeft: \"100px\",\n    paddingRight: \"100px\",\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst statusColors = {\n  delivered: \"success\",\n  pending: \"info\",\n  refunded: \"danger\",\n};\n\nconst AboutUs = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Grid container spacing={2}>\n        <Grid item lg={4} md={4} sm={12} xl={4}>\n          <div style={{ backgroundColor: \"#efefef\", height: \"500px\" }}></div>\n        </Grid>\n        <Grid item lg={8} md={8} sm={12} xl={8}>\n          <div style={{ backgroundColor: \"#efefef\", height: \"500px\" }}></div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nAboutUs.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AboutUs;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Carousel,\n  AboutUs,\n  ChampionBonus,\n  VIPAward,\n  LatestSales,\n  UsersByDevice,\n  LatestProducts,\n  LatestOrders\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(1),\n    heght:\"auto\",\n    backgroundColor:theme.palette.primary.dark,\n  }\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        //spacing={4}\n      >\n        <Grid\n          item\n          lg={12}\n          sm={12}\n          xl={12}\n          xs={12}\n        >\n          <Carousel/>\n        </Grid>\n        <Grid\n          item\n          lg={12}\n          sm={12}\n          xl={12}\n          xs={12}\n        >\n          <AboutUs/>\n        </Grid>\n       \n       \n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import uuid from 'uuid/v1';\nimport moment from 'moment';\n\nexport default [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  IconButton\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport mockData from './data';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    padding: 0\n  },\n  image: {\n    height: 48,\n    width: 48\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestProducts = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [products] = useState(mockData);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest products\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <List>\n          {products.map((product, i) => (\n            <ListItem\n              divider={i < products.length - 1}\n              key={product.id}\n            >\n              <ListItemAvatar>\n                <img\n                  alt=\"Product\"\n                  className={classes.image}\n                  src={product.imageUrl}\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={product.name}\n                secondary={`Updated ${product.updatedAt.fromNow()}`}\n              />\n              <IconButton\n                edge=\"end\"\n                size=\"small\"\n              >\n                <MoreVertIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import palette from 'theme/palette';\n\nexport const data = {\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\n  datasets: [\n    {\n      label: 'This year',\n      backgroundColor: palette.primary.main,\n      data: [18, 5, 19, 27, 29, 19, 20]\n    },\n    {\n      label: 'Last year',\n      backgroundColor: palette.neutral,\n      data: [11, 20, 12, 29, 30, 25, 13]\n    }\n  ]\n};\n\nexport const options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: false,\n  legend: { display: false },\n  cornerRadius: 20,\n  tooltips: {\n    enabled: true,\n    mode: 'index',\n    intersect: false,\n    borderWidth: 1,\n    borderColor: palette.divider,\n    backgroundColor: palette.white,\n    titleFontColor: palette.text.primary,\n    bodyFontColor: palette.text.secondary,\n    footerFontColor: palette.text.secondary\n  },\n  layout: { padding: 0 },\n  scales: {\n    xAxes: [\n      {\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5,\n        ticks: {\n          fontColor: palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          fontColor: palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: palette.divider\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport { data, options } from './chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 400,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestSales = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days <ArrowDropDownIcon />\n          </Button>\n        }\n        title=\"Latest Sales\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Bar\n            data={data}\n            options={options}\n          />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestSales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Avatar,\n  LinearProgress\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  progress: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst ChampionBonus = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              CHAMPION BONUS\n            </Typography>\n            <Typography variant=\"h3\">KSH. 34,789</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        {/* <LinearProgress\n          className={classes.progress}\n          value={75.5}\n          variant=\"determinate\"\n        /> */}\n      </CardContent>\n    </Card>\n  );\n};\n\nChampionBonus.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ChampionBonus;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.white,\n    color: theme.palette.primary.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst VIPAward = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"inherit\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              VIP AWARD\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"h3\"\n            >\n              KSH. 23,200\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nVIPAward.propTypes = {\n  className: PropTypes.string\n};\n\nexport default VIPAward;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst BonusRewards = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOTAL BONUS REWARDS\n            </Typography>\n            <Typography variant=\"h3\">KSH 44,600</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            16%\n          </Typography>\n          <Typography\n            className={classes.caption}\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nBonusRewards.propTypes = {\n  className: PropTypes.string\n};\n\nexport default BonusRewards;\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.error.main,\n          theme.palette.warning.main\n        ],\n        borderWidth: 8,\n        borderColor: theme.palette.white,\n        hoverBorderColor: theme.palette.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: '63',\n      icon: <LaptopMacIcon />,\n      color: theme.palette.primary.main\n    },\n    {\n      title: 'Tablet',\n      value: '15',\n      icon: <TabletMacIcon />,\n      color: theme.palette.error.main\n    },\n    {\n      title: 'Mobile',\n      value: '23',\n      icon: <PhoneIphoneIcon />,\n      color: theme.palette.warning.main\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <IconButton size=\"small\">\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Users By Device\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </div>\n        <div className={classes.stats}>\n          {devices.map(device => (\n            <div\n              className={classes.device}\n              key={device.title}\n            >\n              <span className={classes.deviceIcon}>{device.icon}</span>\n              <Typography variant=\"body1\">{device.title}</Typography>\n              <Typography\n                style={{ color: device.color }}\n                variant=\"h2\"\n              >\n                {device.value}%\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersByDevice;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  iframe: {\n    width: '100%',\n    minHeight: 640,\n    border: 0\n  }\n}));\n\nconst Icons = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <iframe\n        className={classes.iframe}\n        src=\"https://material.io/tools/icons/?icon=accessibility&style=outline\"\n        title=\"Material Design icons\"\n      />\n    </div>\n  );\n};\n\nexport default Icons;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  content: {\n    paddingTop: 150,\n    textAlign: 'center'\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFound = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        justify=\"center\"\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={6}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <Typography variant=\"h1\">\n              404: The page you are looking for isn’t here\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              You either tried some shady route or you came here by mistake.\n              Whichever it is, try using the navigation\n            </Typography>\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/images/undraw_page_not_found_su7k.svg\"\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    height: 64,\n    width: 64,\n    margin: '0 auto',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const { className, product, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <div className={classes.imageContainer}>\n          <img\n            alt=\"Product\"\n            className={classes.image}\n            src={product.imageUrl}\n          />\n        </div>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.title}\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body1\"\n        >\n          {product.description}\n        </Typography>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <AccessTimeIcon className={classes.statsIcon} />\n            <Typography\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              Updated 2hr ago\n            </Typography>\n          </Grid>\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <GetAppIcon className={classes.statsIcon} />\n            <Typography\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {product.totalDownloads} Downloads\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductsToolbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        <Button className={classes.importButton}>Import</Button>\n        <Button className={classes.exportButton}>Export</Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add product\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Search product\"\n        />\n      </div>\n    </div>\n  );\n};\n\nProductsToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProductsToolbar;\n","import uuid from 'uuid/v1';\n\nexport default [\n  {\n    id: uuid(),\n    title: 'Dropbox',\n    description:\n      'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    imageUrl: '/images/products/product_1.png',\n    totalDownloads: '594',\n    updatedAt: '27/03/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Medium Corporation',\n    description:\n      'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    imageUrl: '/images/products/product_2.png',\n    totalDownloads: '625',\n    createdAt: '31/03/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Slack',\n    description:\n      'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    imageUrl: '/images/products/product_3.png',\n    totalDownloads: '857',\n    createdAt: '03/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Lyft',\n    description:\n      'Lyft is an on-demand transportation company based in San Francisco, California.',\n    imageUrl: '/images/products/product_4.png',\n    totalDownloads: '406',\n    createdAt: '04/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'GitHub',\n    description:\n      'GitHub is a web-based hosting service for version control of code using Git.',\n    imageUrl: '/images/products/product_5.png',\n    totalDownloads: '835',\n    createdAt: '04/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Squarespace',\n    description:\n      'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    imageUrl: '/images/products/product_6.png',\n    totalDownloads: '835',\n    createdAt: '04/04/2019'\n  }\n];\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { IconButton, Grid, Typography } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport { ProductsToolbar, ProductCard } from './components';\nimport mockData from './data';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  },\n  pagination: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst ProductList = () => {\n  const classes = useStyles();\n\n  const [products] = useState(mockData);\n\n  return (\n    <div className={classes.root}>\n      <ProductsToolbar />\n      <div className={classes.content}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {products.map(product => (\n            <Grid\n              item\n              key={product.id}\n              lg={4}\n              md={6}\n              xs={12}\n            >\n              <ProductCard product={product} />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n      <div className={classes.pagination}>\n        <Typography variant=\"caption\">1-6 of 20</Typography>\n        <IconButton>\n          <ChevronLeftIcon />\n        </IconButton>\n        <IconButton>\n          <ChevronRightIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Save\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button,\n  TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Password = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            name=\"confirm\"\n            onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Update\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { Notifications, Password } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Settings = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          md={7}\n          xs={12}\n        >\n          <Notifications />\n        </Grid>\n        <Grid\n          item\n          md={5}\n          xs={12}\n        >\n          <Password />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Button,\n  IconButton,\n  TextField,\n  Link,\n  FormHelperText,\n  Checkbox,\n  Typography,\n  Snackbar,\n  Select,\n  InputLabel,\n  MenuItem\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { registerUser } from 'httprequests';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst schema = {\n  firstName: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 32\n    }\n  },\n  lastName: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 32\n    }\n  },\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 128\n    }\n  },\n  policy: {\n    presence: { allowEmpty: false, message: 'is required' },\n    checked: true\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  contentHeader: {\n    //  display: 'flex',\n    // alignItems: 'center',\n    // paddingTop: theme.spacing(5),\n    // paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(0)\n    // paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    marginLeft: theme.spacing(4)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(0)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  policy: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  policyCheckbox: {\n    marginLeft: '-14px'\n  },\n  signUpButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignUp = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const defaultValues = {\n    email: '',\n    name: '',\n    payer_id: 0,\n    phone: '',\n    roles: [],\n    user_type: '',\n    username: ''\n  };\n\n  var genderoptions = ['Male', 'Female', 'Other'];\n  var maritaloptions = ['Single', 'Married'];\n  var membershiptypes = ['Individual', 'Junior', 'Corporate'];\n\n  const [open, setOpen] = useState(false);\n  const [severity, setSeverity] = useState('success');\n  const [message, setMessage] = useState('');\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [dobdate, setDOBDate] = useState(null);\n  const [constituency, setConstituency] = useState('');\n  const [county, setCounty] = useState('');\n  const [email, setEmail] = useState('');\n  const [fullname, setFullName] = useState('');\n  const [gender, setGender] = useState('');\n  const [idnumber, setIDNumber] = useState('');\n  const [maritalstatus, setMaritalStatus] = useState('');\n  const [membertype, setMemberType] = useState('');\n  const [password, setPassword] = useState('');\n  const [phonenumber, setPhoneNumber] = useState('');\n  const [religion, setReligion] = useState('');\n  const [residence, setResidence] = useState('');\n  const [ward, setWard] = useState('');\n\n  const { register, handleSubmit, errors, reset, control } = useForm({\n    defaultValues\n  });\n\n  const handleDOBDateChange = date => {\n    setDOBDate(date.toISOString().split('T')[0]);\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  // const handleSignUp = event => {\n  //   event.preventDefault();\n  //   history.push('/');\n  // };\n\n  const goLogin=()=>{\n    history.push(\"/sign-in\");\n  }\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleSignUp = async data => {\n    console.log('data for send==>' + data)\n    setIsLoading(true);\n\n    let res;\n    try {\n      res = await registerUser('users', data);\n      if (res.status === 200) {\n        setSeverity('success');\n        setMessage(res.data.message);\n        showSnackBar();\n        //goLogin();\n        \n        // props.history.push(\"/app\");\n      } else {\n        setSeverity('error');\n        setMessage(res.data.message);\n        showSnackBar();\n      }\n    } catch (e) {\n      setSeverity('error');\n      setMessage(e.response.data.message);\n      showSnackBar();\n    }\n    setIsLoading(false);\n  };\n\n  const showSnackBar = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid className={classes.grid} container>\n        <Grid className={classes.quoteContainer} item lg={4}>\n          <div className={classes.quote}>\n            <div className={classes.quoteInner}>\n              <Typography\n                className={classes.quoteText}\n                variant=\"h1\"\n                style={{\n                  color: '#1034a6'\n                }}>\n                Sample text goes here\n              </Typography>\n              <div className={classes.person}>\n                <Typography\n                  className={classes.name}\n                  variant=\"body1\"\n                  style={{\n                    color: '#1034a6'\n                  }}>\n                  Sample Text\n                </Typography>\n                <Typography\n                  className={classes.bio}\n                  variant=\"body2\"\n                  style={{\n                    color: '#1034a6'\n                  }}>\n                  Sample Text\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </Grid>\n        <Grid item lg={8} xs={12}>\n          <Grid className={classes.content} container direction=\"column\">\n            <div className={classes.content}>\n              <div className={classes.contentBody}>\n                <form\n                  className={classes.form}\n                  onSubmit={handleSubmit(async data => {\n                    var outdata = {\n                      constituency: constituency,\n                      county: county,\n                      date_of_birth: dobdate,\n                      email: email,\n                      full_name: fullname,\n                      gender: data.gender,\n                      id_number: idnumber,\n                      marital_status: data.marital_status,\n                      membership_type_enum:data.membership_type_enum,\n                      otp: true,\n                      password: password,\n                      phone_number: phonenumber,\n                      religion: religion,\n                      residence: residence,\n                      user_type_enum: 'Subscriber',\n                      ward: ward\n                    };\n                    console.log('signup data', JSON.stringify(outdata));\n\n                   handleSignUp(outdata);\n                    reset();\n                  })}\n                  noValidate\n                  autoComplete=\"off\">\n                  <div className={classes.contentHeader}>\n                    <IconButton onClick={handleBack} style={{ paddingLeft: 0 }}>\n                      <ArrowBackIcon />\n                    </IconButton>\n                  </div>\n                  <Typography className={classes.title} variant=\"h2\">\n                    Create new account\n                  </Typography>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Use your email to create new account\n                  </Typography>\n                  <Grid container direction=\"row\" spacing={2}>\n                    <Grid item lg={6} xs={12}>\n                      <InputLabel\n                        htmlFor=\"outlined-Name\"\n                        style={{ marginTop: 0, marginBottom: 3 }}\n                        id=\"demo-simple-select-placeholder-label-label\">\n                        Membership Type\n                      </InputLabel>\n                      <Controller\n                        className={classes.formControl}\n                        as={\n                          <Select\n                            labelId=\"demo-simple-select-placeholder-label-label\"\n                            id=\"membership_type_enum\"\n                            displayEmpty\n                            // inputProps={{\n                            //   name: 'Name',\n                            //   id: 'outlined-Name'\n                            // }}\n\n                            // value={\n                            //     allTypes[getTypeIndex(selectedType.type_id, allTypes)] || ''\n                            // }\n                            //  onChange={handleChange2}\n                          >\n                            {membershiptypes.map(m => (\n                              <MenuItem key={m} value={m}>\n                                {' '}\n                                {m}{' '}\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        }\n                        name=\"membership_type_enum\"\n                        control={control}\n                        fullWidth\n                        defaultValue={'None'}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('firstName')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('firstName')\n                        //     ? formState.errors.firstName[0]\n                        //     : null\n                        // }\n                        label=\"Full Name\"\n                        name=\"full_name\"\n                        onChange={e => setFullName(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.firstName || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('lastName')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('lastName')\n                        //     ? formState.errors.lastName[0]\n                        //     : null\n                        // }\n                        label=\"Phone Number\"\n                        name=\"phone_number\"\n                        onChange={e => setPhoneNumber(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.lastName || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('lastName')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('lastName')\n                        //     ? formState.errors.lastName[0]\n                        //     : null\n                        // }\n                        label=\"Email Address\"\n                        name=\"email\"\n                        onChange={e => setEmail(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.lastName || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <InputLabel\n                        style={{ marginTop: 17 }}\n                        htmlFor=\"input-with-icon-adornment\"></InputLabel>\n\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                          inputVariant=\"outlined\"\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          label=\"Date Of Birth\"\n                          format=\"MM/dd/yyyy\"\n                          value={dobdate}\n                          onChange={handleDOBDateChange}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date'\n                          }}\n                          style={{ width: 293, marginTop: 0 }}\n                        />\n                      </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <InputLabel\n                        style={{ marginTop: 0, marginBottom: 3 }}\n                        id=\"demo-simple-select-placeholder-label-label2\">\n                        Gender\n                      </InputLabel>\n                      <Controller\n                        className={classes.formControl}\n                        as={\n                          <Select\n                            labelId=\"demo-simple-select-placeholder-label-label2\"\n                            id=\"gender\"\n                            displayEmpty\n\n                            // value={\n                            //     allTypes[getTypeIndex(selectedType.type_id, allTypes)] || ''\n                            // }\n                            //  onChange={handleChange2}\n                          >\n                            {genderoptions.map(m => (\n                              <MenuItem key={m} value={m}>\n                                {' '}\n                                {m}{' '}\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        }\n                        name=\"gender\"\n                        control={control}\n                        fullWidth\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <InputLabel\n                        style={{ marginTop: 0, marginBottom: 3 }}\n                        id=\"demo-simple-select-placeholder-label-label3\">\n                        Marital Status\n                      </InputLabel>\n                      <Controller\n                        className={classes.formControl}\n                        as={\n                          <Select\n                            labelId=\"demo-simple-select-placeholder-label-label3\"\n                            id=\"marital_status\"\n                            displayEmpty\n\n                            // value={\n                            //     allTypes[getTypeIndex(selectedType.type_id, allTypes)] || ''\n                            // }\n                            //  onChange={handleChange2}\n                          >\n                            {maritaloptions.map(m => (\n                              <MenuItem key={m} value={m}>\n                                {' '}\n                                {m}{' '}\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        }\n                        name=\"marital_status\"\n                        control={control}\n                        fullWidth\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('email')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('email') ? formState.errors.email[0] : null\n                        // }\n                        label=\"ID number\"\n                        name=\"id_number\"\n                        onChange={e => setIDNumber(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.email || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('email')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('email') ? formState.errors.email[0] : null\n                        // }\n                        label=\"County\"\n                        name=\"county\"\n                        onChange={e => setCounty(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.email || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('email')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('email') ? formState.errors.email[0] : null\n                        // }\n                        label=\"Constituency\"\n                        name=\"constituency\"\n                        onChange={e => setConstituency(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.email || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('email')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('email') ? formState.errors.email[0] : null\n                        // }\n                        label=\"Ward\"\n                        name=\"ward\"\n                        onChange={e => setWard(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.email || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('email')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('email') ? formState.errors.email[0] : null\n                        // }\n                        label=\"Residence\"\n                        name=\"residence\"\n                        onChange={e => setResidence(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.email || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('email')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('email') ? formState.errors.email[0] : null\n                        // }\n                        label=\"Religion\"\n                        name=\"religion\"\n                        onChange={e => setReligion(e.target.value)}\n                        type=\"text\"\n                        //value={formState.values.email || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      <TextField\n                        className={classes.textField}\n                        //error={hasError('password')}\n                        fullWidth\n                        // helperText={\n                        //   hasError('password')\n                        //     ? formState.errors.password[0]\n                        //     : null\n                        // }\n                        label=\"Password\"\n                        name=\"password\"\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                        //value={formState.values.password || ''}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  </Grid>\n                  <div className={classes.policy}>\n                    {/* <Checkbox\n                      checked={formState.values.policy || false}\n                      className={classes.policyCheckbox}\n                      color=\"primary\"\n                      name=\"policy\"\n                      //onChange={handleChange}\n                    /> */}\n                    <Typography\n                      className={classes.policyText}\n                      color=\"textSecondary\"\n                      variant=\"body1\">\n                      By clicking the sign up button, you have read and agreed\n                      to the{' '}\n                      <Link\n                        color=\"primary\"\n                        component={RouterLink}\n                        to=\"#\"\n                        underline=\"always\"\n                        variant=\"h6\">\n                        Terms and Conditions\n                      </Link>{' '}\n                      .\n                    </Typography>\n                  </div>\n                  {hasError('policy') && (\n                    <FormHelperText error>\n                      {formState.errors.policy[0]}\n                    </FormHelperText>\n                  )}\n                  <Button\n                    className={classes.signUpButton}\n                    color=\"primary\"\n                    // disabled={!formState.isValid}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\">\n                     {\n                    isLoading ? (\n                      <div>Please Wait...</div>\n                    ) : (\n                        <div>\n                          Sign up now</div>\n                      )\n                  }\n                  </Button>\n                  <Typography color=\"textSecondary\" variant=\"body1\">\n                    Have an account?{' '}\n                    <Link component={RouterLink} to=\"/sign-in\" variant=\"h6\">\n                      Sign in\n                    </Link>\n                  </Typography>\n                </form>\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"Note archived\">\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignUp);\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography as MuiTypography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst variants = {\n  h1: 'Nisi euismod ante senectus consequat phasellus ut',\n  h2: 'Nisi euismod ante senectus consequat phasellus ut',\n  h3: 'Nisi euismod ante senectus consequat phasellus ut',\n  h4: 'Nisi euismod ante senectus consequat phasellus ut',\n  h5: 'Nisi euismod ante senectus consequat phasellus ut',\n  h6: 'Nisi euismod ante senectus consequat phasellus ut',\n  subtitle1: 'Leo varius justo aptent arcu urna felis pede nisl',\n  subtitle2: 'Leo varius justo aptent arcu urna felis pede nisl',\n  body1:\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.Laoreet velit a fames commodo tristique hendrerit sociosqu rhoncus vel sapien penatibus facilisis faucibus ad. Mus purus vehicula imperdiet tempor lectus, feugiat Sapien erat viverra netus potenti mattis purus turpis. Interdum curabitur potenti tristique. Porta velit dignissim tristique ultrices primis.',\n  body2:\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.',\n  caption: 'Accumsan leo pretium conubia ullamcorper.',\n  overline: 'Accumsan leo pretium conubia ullamcorper.',\n  button: 'Vivamus ultrices rutrum fames dictumst'\n};\n\nconst Typography = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        {Object.keys(variants).map((key, i) => (\n          <Fragment key={i}>\n            <Grid\n              item\n              sm={3}\n              xs={12}\n            >\n              <MuiTypography variant=\"caption\">{key}</MuiTypography>\n            </Grid>\n            <Grid\n              item\n              sm={9}\n              xs={12}\n            >\n              <MuiTypography variant={key}>{variants[key]}</MuiTypography>\n            </Grid>\n          </Fragment>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Typography;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\nimport { getInitials } from 'helpers';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst TransactionsTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n    const { users } = props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.id);\n    } else {\n      selectedUsers = [];\n    }\n\n    setSelectedUsers(selectedUsers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedUsers(newSelectedUsers);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedUsers.length === users.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedUsers.length > 0 &&\n                        selectedUsers.length < users.length\n                      }\n                      onChange={handleSelectAll}\n                    />\n                  </TableCell>\n                  <TableCell>Transaction ID</TableCell>\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Transaction Type</TableCell>\n                  <TableCell>Date</TableCell>\n                 \n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.slice(0, rowsPerPage).map(user => (\n                  <TableRow\n                    className={classes.tableRow}\n                    hover\n                    key={user.id}\n                    selected={selectedUsers.indexOf(user.id) !== -1}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedUsers.indexOf(user.id) !== -1}\n                        color=\"primary\"\n                        onChange={event => handleSelectOne(event, user.id)}\n                        value=\"true\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        <Avatar\n                          className={classes.avatar}\n                          src={user.avatarUrl}\n                        >\n                          {getInitials(user.name)}\n                        </Avatar>\n                        <Typography variant=\"body1\">{user.name}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    <TableCell>\n                      {user.address.city}, {user.address.state},{' '}\n                      {user.address.country}\n                    </TableCell>\n                    <TableCell>{user.phone}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={users.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nTransactionsTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default TransactionsTable;\n","export default (name = '') =>\n  name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n","import uuid from 'uuid/v1';\n\nexport default [\n  {\n    id: uuid(),\n    name: 'Ekaterina Tankova',\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    email: 'ekaterina.tankova@devias.io',\n    phone: '304-428-3097',\n    avatarUrl: '/images/avatars/avatar_3.png',\n    createdAt: 1555016400000\n  },\n  {\n    id: uuid(),\n    name: 'Cao Yu',\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    email: 'cao.yu@devias.io',\n    avatarUrl: '/images/avatars/avatar_4.png',\n    phone: '712-351-5711',\n    createdAt: 1555016400000\n  },\n  {\n    id: uuid(),\n    name: 'Alexa Richardson',\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    email: 'alexa.richardson@devias.io',\n    phone: '770-635-2682',\n    avatarUrl: '/images/avatars/avatar_2.png',\n    createdAt: 1555016400000\n  },\n  {\n    id: uuid(),\n    name: 'Anje Keizer',\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    email: 'anje.keizer@devias.io',\n    avatarUrl: '/images/avatars/avatar_5.png',\n    phone: '908-691-3242',\n    createdAt: 1554930000000\n  },\n  {\n    id: uuid(),\n    name: 'Clarke Gillebert',\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    email: 'clarke.gillebert@devias.io',\n    phone: '972-333-4106',\n    avatarUrl: '/images/avatars/avatar_6.png',\n    createdAt: 1554757200000\n  },\n  {\n    id: uuid(),\n    name: 'Adam Denisov',\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    email: 'adam.denisov@devias.io',\n    phone: '858-602-3409',\n    avatarUrl: '/images/avatars/avatar_1.png',\n    createdAt: 1554670800000\n  },\n  {\n    id: uuid(),\n    name: 'Ava Gregoraci',\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    email: 'ava.gregoraci@devias.io',\n    avatarUrl: '/images/avatars/avatar_7.png',\n    phone: '415-907-2647',\n    createdAt: 1554325200000\n  },\n  {\n    id: uuid(),\n    name: 'Emilee Simchenko',\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    email: 'emilee.simchenko@devias.io',\n    phone: '702-661-1654',\n    avatarUrl: '/images/avatars/avatar_8.png',\n    createdAt: 1523048400000\n  },\n  {\n    id: uuid(),\n    name: 'Kwak Seong-Min',\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    email: 'kwak.seong.min@devias.io',\n    avatarUrl: '/images/avatars/avatar_9.png',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    name: 'Merrile Burgett',\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    email: 'merrile.burgett@devias.io',\n    phone: '801-301-7894',\n    avatarUrl: '/images/avatars/avatar_10.png',\n    createdAt: 1522702800000\n  }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TransactionsToolbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        <Button className={classes.importButton}>Import</Button>\n        <Button className={classes.exportButton}>Export</Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add user\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Search user\"\n        />\n      </div>\n    </div>\n  );\n};\n\nTransactionsToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TransactionsToolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { TransactionsToolbar,TransactionsTable } from './components';\nimport mockData from './data';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst TransactionsList = () => {\n  const classes = useStyles();\n\n  const [users] = useState(mockData);\n\n  return (\n    <div className={classes.root}>\n      {/* <TransactionsToolbar /> */}\n      <div className={classes.content}>\n        <TransactionsTable users={users} />\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionsList;\n","import React, { useState, useEffect, forwardRef } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Grid,\n    Button,\n    TextField,\n    Link,\n    Typography,\n    Snackbar\n} from '@material-ui/core';\nimport auth from \"auth.js\";\nimport Box from '@material-ui/core/Box';\nimport { registerUser } from 'httprequests';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { ErrorAlert } from '../../common/alerts';\nimport EmailIcon from '@material-ui/icons/Email';\nimport { useForm } from 'react-hook-form';\nimport DialpadIcon from '@material-ui/icons/Dialpad';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport axios from 'axios';\nimport { MAINURL } from 'common/constants';\nimport LockIcon from '@material-ui/icons/Lock';\n\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n    <div\n        ref={ref}\n    //style={{ flexGrow: 1 }}\n    >\n        <RouterLink {...props} />\n    </div>\n));\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#ffffff',\n        height: '100%'\n    },\n    grid: {\n        height: '100%'\n    },\n    quoteContainer: {\n        [theme.breakpoints.down('md')]: {\n            display: 'none'\n        }\n    },\n    quote: {\n        backgroundColor: theme.palette.neutral,\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        // backgroundImage: 'url(/images/logos/mrescurelogobig.jpeg)',\n        backgroundSize: 'box',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center'\n    },\n    quoteInner: {\n        textAlign: 'center',\n        flexBasis: '600px'\n    },\n    quoteText: {\n        color: theme.palette.white,\n        fontWeight: 300\n    },\n    name: {\n        marginTop: theme.spacing(3),\n        color: theme.palette.white\n    },\n    bio: {\n        color: theme.palette.white\n    },\n    contentContainer: {},\n    content: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    contentHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing(5),\n        paddingBototm: theme.spacing(2),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2)\n    },\n    logoImage: {\n        marginLeft: theme.spacing(4)\n    },\n    contentBody: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        [theme.breakpoints.down('md')]: {\n            justifyContent: 'center'\n        }\n    },\n    form: {\n        marginTop: 60,\n        paddingLeft: 100,\n        paddingRight: 100,\n        paddingBottom: 125,\n        flexBasis: 700,\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(2)\n        }\n    },\n    title: {\n        //marginTop: theme.spacing(1)\n    },\n    socialButtons: {\n        marginTop: theme.spacing(3)\n    },\n    socialIcon: {\n        marginRight: theme.spacing(1)\n    },\n    sugestion: {\n        marginTop: theme.spacing(2)\n    },\n    textField: {\n        marginTop: theme.spacing(2)\n    },\n    signInButton: {\n        backgroundColor: '#1034a6',\n        margin: theme.spacing(2, 0),\n        '&:hover': {\n            backgroundColor: \"#e53935\",\n            color: \"#ffffff\",\n            '& $icon': {\n                color: \"#ffffff\"\n            }\n        }\n\n    },\n\n    resetPassword: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6}\n        variant=\"filled\"\n        {...props} />;\n}\n\nconst defaultProps = {\n    bgcolor: 'background.paper',\n    m: 1,\n    style: {\n        width: '500px',\n        height: '500px'\n    },\n    borderColor: '#b2b2b2b2',\n    align: 'center',\n    marginTop: '30px',\n    alignItems: 'center'\n\n};\n\nconst CssTextField = withStyles({\n    root: {\n        // '& label.Mui-focused': {\n        //     color: '#008000'\n        // },\n        // '& .MuiInput-underline:after': {\n        //     borderBottomColor: '#008000'\n        // },\n        // '& .MuiOutlinedInput-root': {\n        //     '& fieldset': {\n        //         borderColor: '#b2b2b2'\n        //     },\n        //     '&:hover fieldset': {\n        //         borderColor: '#fad201'\n        //     },\n        //     '&.Mui-focused fieldset': {\n        //         borderColor: '#008000'\n        //     }\n\n        // }\n    }\n\n\n})(TextField);\n\nconst ResetPassword = props => {\n    const defaultValues = {};\n    const history = useHistory();\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [otpcode, setOtpcode] = useState('');\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n    const [helperText, /* setHelperText */\n    ] = useState('');\n    const [error, /* setError */\n    ] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [emailScreen, setEmailscreen] = useState(true);\n    const [otpScreen, setOtpScreen] = useState(true);\n    const { register, handleSubmit, errors, reset, control } = useForm({ defaultValues });\n    const [severity, setSeverity] = useState('success');\n\n    const showSnackBar = () => {\n        setOpen(true);\n    };\n\n\n\n    const handleReset = async (data) => {\n        //console.log('data for send==>' + data)\n        setIsLoading(true);\n\n        let res;\n        try {\n            //http://localhost:18080/api/user/resetPassword?email=sb-805n92553143%40personal.example.com\n            res = await axios.post(`${MAINURL}users/resetPassword?email=${data.email}`);\n           // console.log('response reset' + JSON.stringify(res.body))\n            if (res.status === 201) {\n                setSeverity('success');\n                \n                setMessage(res.data.message);\n                showSnackBar();\n                setEmailscreen(false);\n\n            } else {\n                console.log('minor error')\n                setSeverity('error');\n                setMessage(res.data.message);\n                showSnackBar();\n\n            }\n        } catch (e) {\n            console.log('major error' + JSON.stringify(e))\n            setSeverity('error');\n            setMessage(e.response.data.message);\n            showSnackBar();\n\n\n        }\n        setIsLoading(false);\n\n    }\n\n    const submitOTP = async (data) => {\n        //console.log('data for send==>' + data)\n        setIsLoading(true);\n\n        let res;\n        try {\n            //http://localhost:18080/api/reset-password\n            res = await registerUser('reset-password', data);\n            if (res.status === 200) {\n                setSeverity('success');\n                setMessage(res.data.message);\n                showSnackBar();\n                setOtpScreen(false);\n\n            } else {\n                console.log('minor error')\n                setSeverity('error');\n                setMessage(res.data.message);\n                showSnackBar();\n\n            }\n        } catch (e) {\n            console.log('major error')\n            setSeverity('error');\n            setMessage(e.response.data.message);\n            showSnackBar();\n\n\n        }\n        setIsLoading(false);\n\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n\n    return (\n        <div className={\n            classes.root\n        }>\n            <Grid className={\n                classes.grid\n            }\n                container>\n                <Grid className={\n                    classes.content\n                }\n                    item\n                    lg={7}\n                    xs={12}>\n                    <div className={\n                        classes.content\n                    }>\n\n                        <div className={\n                            classes.contentBody\n                        }>\n                            <form className={\n                                classes.form\n                            }\n                                // onSubmit={handleSignIn}\n                                noValidate\n                                autoComplete=\"off\"\n                            >\n                                <Link style={\n                                    {\n                                        color: \"#1034a6\",\n\n                                    }\n                                }\n                                    component={RouterLink}\n                                    to=\"/sign-in\"\n                                    variant=\"h6\">\n                                    {'< '}Go back to login\n                                    </Link>\n                                <Typography\n                                    style={\n                                        {\n                                            marginTop: \"20px\",\n                                            //marginBottom: \"10px\"\n                                        }\n                                    }\n                                    color=\"textSecondary\" variant='h5'>\n                                    Philial login help\n                                </Typography>\n\n                                {emailScreen ? <div>\n\n                                    <Typography className={\n                                        classes.title\n                                    }\n                                        variant=\"h3\">\n                                        Reset your password\n                                    </Typography>\n                                    <form\n                                        onSubmit={handleSubmit(async (data) => {\n                                            console.log('reset email is' + JSON.stringify(data))\n                                            handleReset(data);\n                                            reset()\n                                        }\n                                        )}\n                                    >\n                                        <CssTextField\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            id=\"email\"\n                                            name=\"email\"\n                                            inputRef={register({ required: true })}\n                                            error={errors.email}\n                                            helperText={errors.email && 'Email address required'}\n                                            placeholder=\"Enter email address\"\n                                            type=\"text\"\n                                            variant=\"outlined\"\n                                            InputProps={{\n                                                startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                        <EmailIcon style={{ fontSize: 35, color: '#1034a6' }} />\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                        />\n\n                                        <Button className={\n                                            classes.signInButton\n                                        }\n                                            color=\"primary\"\n                                            fullWidth\n                                            size=\"large\"\n                                            type='submit'\n                                            variant=\"contained\"\n                                        //disabled={isButtonDisabled}\n                                        >\n                                            {\n                                                isLoading ? (\n                                                    <div>Please Wait...</div>\n                                                ) : (\n                                                        <div>\n                                                            Reset Password</div>\n                                                    )\n                                            } </Button>\n                                    </form>\n\n\n                                </div> : (otpScreen ? <div>\n                                    <Typography className={\n                                        classes.title\n                                    }\n                                        variant=\"h3\">\n                                        Enter the code we sent to your email\n                                </Typography>\n                                    <form\n                                        onSubmit={handleSubmit(async (data) => {\n                                            console.log('reset code is' + JSON.stringify(data))\n                                            submitOTP(data)\n                                        }\n                                        )}\n                                    >\n                                        <CssTextField\n                                            autoComplete='off'\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            id=\"otpcode\"\n                                            name=\"otpcode\"\n                                            inputRef={register({ required: true })}\n                                            error={errors.code}\n                                            helperText={errors.code && 'Code required'}\n                                            placeholder=\"Enter code sent to your email address\"\n                                            type=\"text\"\n                                            variant=\"outlined\"\n                                            InputProps={{\n                                                startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                        <DialpadIcon style={{ fontSize: 35, color: '#1034a6' }} />\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                        />\n\n                                        <CssTextField\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            id=\"new_password\"\n                                            name=\"new_password\"\n                                            inputRef={register({ required: true })}\n                                            error={errors.new_password}\n                                            helperText={errors.new_password && 'New password required'}\n                                            placeholder=\"Enter new password\"\n                                            type=\"text\"\n                                            variant=\"outlined\"\n                                            InputProps={{\n                                                startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                        <LockIcon style={{ fontSize: 35, color: '#1034a6' }} />\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                        />\n\n                                        <Button className={\n                                            classes.signInButton\n                                        }\n                                            color=\"primary\"\n                                            fullWidth\n                                            size=\"large\"\n                                            type='submit'\n                                            variant=\"contained\"\n                                        //disabled={isButtonDisabled}\n                                        >\n                                            {\n                                                isLoading ? (\n                                                    <div>Please Wait...</div>\n                                                ) : (\n                                                        <div>\n                                                            Submit</div>\n                                                    )\n                                            } </Button>\n\n                                    </form>\n                                </div> :\n\n\n\n\n\n                                    <div>\n                                        <Typography className={\n                                            classes.title\n                                        }\n                                            variant=\"h3\">\n                                            Password reset successful!\n                                </Typography>\n                                        <Button className={\n                                            classes.signInButton\n                                        }\n                                            color=\"primary\"\n                                            fullWidth\n                                            size=\"large\"\n                                            component={RouterLink}\n                                            to=\"/sign-in\"\n                                            variant=\"contained\"\n                                        //disabled={isButtonDisabled}\n                                        >\n                                            {\n                                                isLoading ? (\n                                                    <div>Please Wait...</div>\n                                                ) : (\n                                                        <div>\n                                                            Login</div>\n                                                    )\n                                            } </Button>\n\n                                    </div>)}\n\n                               \n\n\n\n\n                                <Typography variant=\"body1\" align='center'>\n                                    &copy;{' '}\n                                    <Link component=\"a\" href=\"https://www.philial.com/\" target=\"_blank\"\n                                        style={\n                                            { color: \"#1034a6\" }\n                                        }>\n                                        Philial\n                                    </Link>\n                                    . 2020\n                                </Typography>\n                                <Typography variant=\"body1\" align='center'>\n                                    Powered by EastBytes Ltd\n                                </Typography>\n                            </form>\n\n                        </div>\n\n                    </div>\n                </Grid>\n                <Grid className={\n                    classes.quoteContainer\n                }\n                    item\n                    lg={5}>\n                    <Box border={1}\n                        borderRadius={5}\n                        {...defaultProps}>\n                        <div className={\n                            classes.quote\n                        }><img src='/images/auth.jpg' alt=\"Philial logo\" height=\"300px\" width=\"300px\" />\n                        </div>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Snackbar anchorOrigin={\n                {\n                    vertical: 'top',\n                    horizontal: 'right'\n                }\n            }\n                open={open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n                message=\"Note archived\"\n            >\n                <Alert onClose={handleClose}\n                    severity={severity}>\n                    {message}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n};\n\nResetPassword.propTypes = {\n    history: PropTypes.object\n};\n\nexport default withRouter(ResetPassword);\n","import React, { useState } from \"react\";\nimport {\n  ScrollingProvider,\n  useScrollSection,\n  Section,\n} from \"react-scroll-section\";\nimport {\n  Button,\n  Box,\n  colors,\n  AppBar,\n  Toolbar,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n   // padding:120,\n\n    backgroundColor: \"transparent\",\n  },\n  spaceItem: {\n    flexGrow: 1,\n  },\n  menuItem: {\n    height: \"100%\",\n  },\n  item: {\n    display: \"flex\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginRight: 10,\n    minWidth: 80,\n  },\n  button: {\n    color: colors.grey[600],\n    padding: \"10px 8px\",\n    justifyContent: \"center\",\n    textTransform: \"none\",\n    letterSpacing: 0,\n    width: \"100%\",\n    fontWeight: theme.typography.fontWeightMedium,\n    \"&:hover\": {\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.secondary.main,\n      \"& $icon\": {\n        color: colors.grey[400],\n      },\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(1),\n  },\n  active: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.white,\n    fontWeight: theme.typography.fontWeightMedium,\n    \"& $icon\": {\n      color: theme.palette.white,\n    },\n    \"&:hover\": {\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.secondary.dark,\n      color: \"#ffffff\",\n      \"& $icon\": {\n        color: \"#ffffff\",\n      },\n    },\n  },\n}));\n\n//   const CustomRouterLink = forwardRef((props, ref) => (\n//     <div\n//       ref={ref}\n//       style={{ flexGrow: 1 }}\n//     >\n//       <RouterLink {...props} />\n//     </div>\n//   ));\nconst MyMenuItem = withStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"#fb5012 !important\",\n      color: \"#ffffff\",\n    },\n    \"&:selected\": {\n      backgroundColor: \"red !important\",\n      color: \"blue\",\n    },\n  },\n})(MenuItem);\n\nconst Menu = () => {\n  const homeSection = useScrollSection(\"home\");\n  const aboutSection = useScrollSection(\"about\");\n  const portfolioSection = useScrollSection(\"portfolio\");\n  const workSection = useScrollSection(\"work\");\n  const funSection = useScrollSection(\"fun\");\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState();\n\n  const updateSelected = (selectedIndex, activeSection) => {\n    // setSelected(selectedIndex);\n    activeSection.onClick();\n  };\n\n  return (\n      <div className={classes.root}>\n    <AppBar\n      position=\"fixed\"\n      style={{\n        backgroundColor: \"white\",\n        paddingTop: 0,\n        paddingBottom: 0,\n       // margin: 100,\n      }}\n    >\n      <Toolbar\n        style={{\n         \n          paddingTop: 0,\n          paddingBottom: 0,\n          margin: 0,\n          height:\"50px\"\n        }}\n      >\n        <div className={classes.spaceItem}></div>\n        <MyMenuItem className={classes.menuItem}\n          onClick={() => updateSelected(0, homeSection)}\n          selected={homeSection.selected}\n        >\n          Home\n        </MyMenuItem>\n        <MyMenuItem className={classes.menuItem}\n          onClick={() => updateSelected(1, portfolioSection)}\n          selected={portfolioSection.selected}\n        >\n          {\" \"}\n          Portfolio\n        </MyMenuItem>\n        <MyMenuItem\n          className={classes.menuItem}\n          onClick={() => updateSelected(2, workSection)}\n          selected={workSection.selected}\n        >\n          Work\n        </MyMenuItem>\n        <MyMenuItem\n          className={classes.menuItem}\n          onClick={() => updateSelected(3, aboutSection)}\n          selected={aboutSection.selected}\n        >\n          About\n        </MyMenuItem>\n        <MyMenuItem\n          className={classes.menuItem}\n          onClick={() => updateSelected(4, funSection)}\n          selected={funSection.selected}\n        >\n          Fun\n        </MyMenuItem>\n      </Toolbar>\n    </AppBar></div>\n  );\n};\n\nexport default Menu;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel,\n  Grid,\n  Paper,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport Particles from \"react-particles-js\";\nimport GlitchText from 'react-glitch-effect/core/Text';\nimport GlitchClip from 'react-glitch-effect/core/Clip';\n\nimport { StatusBullet } from \"components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    backgroundColor: \"white\",\n    // height: \"500px\",\n    //overflow:'auto'\n    //marginTop:\"50px\",\n    paddingBottom: 50,\n    paddingTop: \"65px\",\n\n    // paddingLeft: \"50px\",\n    // paddingRight: \"50px\",\n    //flexGrow: 1,\n  },\n  paper: {\n    //padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  marginAutoContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"30%\",\n  },\n    //  backgroundColor: \"gold\",\n  },\n  marginAutoItem: {\n    margin: \"auto\",\n    paddingTop: \"150px\",\n    [theme.breakpoints.down(\"sm\")]: {\n        paddingTop: \"10px\",\n    },\n  },\n  landingtext:{\n    marginLeft: 50,\n    marginTop: 300,\n    marginBottom: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n        marginTop: 50,\n    },\n  }\n}));\n\nconst statusColors = {\n  delivered: \"success\",\n  pending: \"info\",\n  refunded: \"danger\",\n};\n\nconst LandingSection = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Grid container>\n      {/* <div style={{position: 'relative'}}> */}\n  {/* <div style={{position: 'absolute'}}> */}\n  <Particles\n        style={{ position: \"absolute\" }}\n        height=\"100%\"\n        //width=\"100%\"\n        params={{\n          particles: {\n            color: {\n              value: \"#fb5012\",\n            },\n            line_linked: {\n              color: {\n                value: \"#1a1b41\",\n              },\n            },\n            number: {\n              value: 50,\n            },\n            size: {\n              value: 3,\n            },\n            interactivity: {\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: \"repulse\",\n                },\n              },\n            },\n        },\n        }}\n      />\n  {/* </div> */}\n  {/* </div> */}\n\n        <Grid container spacing={0}>\n          <Grid item lg={7} md={7} sm={12} xs={12} xl={7}>\n            <div\n              className={classes.landingtext}\n            >\n         \n              <Typography variant=\"h1\" style={{fontWeight:700}} color=\"primary\">\n                Hi there. I am Laban, a UI/UX Designer and Developer based in\n                Nairobi, Kenya.\n              </Typography>\n\n              <Typography variant=\"h3\"  style={{fontWeight:600}} color=\"secondary\">\n                I create better experiences for people.\n              </Typography>\n            </div>\n          </Grid>\n          <Grid item lg={5} md={5} sm={12} xs={12} xl={5}>\n            <div className={classes.marginAutoContainer}>\n              <div className={classes.marginAutoItem}>\n              <GlitchClip duration={\"5s\"}>\n     <img height=\"300px\" width=\"300px\" src={\"images/laban.png\"} />  \n     </GlitchClip>\n              </div>{\" \"}\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nLandingSection.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default LandingSection;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { motion } from \"framer-motion\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel,\n  Grid,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nimport { StatusBullet } from \"components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //backgroundColor:theme.palette.primary.dark,\n    // height: \"500px\",\n    marginTop: 10,\n    paddingBottom: 10,\n    paddingTop: 20,\n    // paddingLeft: \"100px\",\n    // paddingRight: \"100px\",\n    flexGrow: 1,\n    //minWidth:500,\n    height: 500,\n    padding:0,\n    borderRadius:0\n\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  cardtitle: {\n    fontWeight: 500,\n    fontSize: 28,\n  },\n  cardsubtitle: {\n    fontWeight: 500,\n    fontSize: 14,\n    color:'#454545'\n  },\n}));\n\nconst statusColors = {\n  delivered: \"success\",\n  pending: \"info\",\n  refunded: \"danger\",\n};\n\nconst ProjectCard = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <motion.div whileHover={{ scale: 1.02 }} whileTap={{ scale: 0.98 }} >\n    <Card className={classes.root}>\n      <CardHeader\n        title={\n          <Typography\n            color=\"primary\"\n            variant=\"h3\"\n            className={classes.cardtitle}\n            gutterBottom\n          >\n            Project Title Here\n          </Typography>\n        }\n        subheader={\n          <Typography\n            color=\"primary\"\n           // variant=\"h6\"\n            className={classes.cardsubtitle}\n          >\n            Lorem Ipsum is simply dummy text of the printing and typesetting\n            industry. Lorem Ipsum has been the industry's standard dummy text\n            ever since the 1500s,\n          </Typography>\n        }\n      />\n      <CardContent style={{padding:5, margin:0}}>\n      <div style={{ height: 300, width: '100%',borderRadius:0, backgroundColor:'#5a6870' }}> </div>\n      </CardContent>\n     \n    </Card>\n    </motion.div>\n  );\n};\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default ProjectCard;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Ticker from \"react-ticker\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel,\n  Grid,\n  Paper,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport { ProjectCard } from \"./components\";\n\nimport { StatusBullet } from \"components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    backgroundColor: \"white\",\n    // height: \"500px\",\n    //overflow:'auto'\n    //marginTop:\"50px\",\n    paddingBottom: 50,\n    paddingTop: \"65px\",\n    // margin:0,\n    // padding:0\n\n    width: \"100%\",\n  },\n  cardsContainer: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: 20,\n      paddingRight: 20,\n    },\n  },\n\n  clients: {\n    height: \"200px\",\n    backgroundColor: \"#1a1b41\",\n    marginBottom: 20,\n  },\n}));\n\nconst statusColors = {\n  delivered: \"success\",\n  pending: \"info\",\n  refunded: \"danger\",\n};\n\nconst Portfolio = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Grid container spacing={0}>\n        <Grid item lg={12} md={12} sm={12} xs={12} xl={12}>\n          <div className={classes.clients}>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#e3e3e3\",\n                marginLeft: 50,\n                fontWeight: 600,\n                paddingTop: 20,\n                fontSize: 24,\n                marginBottom:20\n              }}\n              gutterBottom\n            >\n              Happy Clients\n            </Typography>\n            <Ticker>\n\n            {() => <div style={{display:'flex'}}>\n              <div style={{height:100,width:100,marginRight:50, backgroundColor:'red'}} />\n              <div style={{height:100,width:100,marginRight:50, backgroundColor:'orange'}} />\n              <div style={{height:100,width:100,marginRight:50, backgroundColor:'yellow'}} />\n              <div style={{height:100,width:100,marginRight:50, backgroundColor:'green'}} />\n              <div style={{height:100,width:100,marginRight:50, backgroundColor:'blue'}} />\n              <div style={{height:100,width:100,marginRight:50, backgroundColor:'purple'}} />\n              </div>}\n              {/* {({ index }) => (\n                <>\n                  <h1>This is the Headline of element #{index}!</h1>\n                  <img src=\"www.my-image-source.com/\" alt=\"\" />\n                </>\n              )} */}\n            </Ticker>\n          </div>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12} xl={12}>\n          <Typography\n            variant=\"h5\"\n            color=\"primary\"\n            style={{\n              //color: '',\n              marginLeft: 50,\n              fontWeight: 600,\n              paddingTop: 20,\n              fontSize: 30,\n              marginBottom: 20,\n            }}\n          >\n            Portfolio\n          </Typography>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12} xl={12}>\n          <Grid container spacing={3} className={classes.cardsContainer}>\n            <Grid item lg={6} md={6} sm={12} xs={12} xl={6}>\n              <ProjectCard />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12} xl={6}>\n              <ProjectCard />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12} xl={6}>\n              <ProjectCard />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12} xl={6}>\n              <ProjectCard />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nPortfolio.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Portfolio;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n//import ModeToggle, { Menu } from './ModeToggle';\n\nimport {\n  Menu,\n  LandingSection,\n  Portfolio\n} from './components';\nimport {\n  ScrollingProvider,\n  useScrollSection,\n  Section,\n} from 'react-scroll-section';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width:\"100\",\n    //paddingTop: theme.spacing(1),\n    heght:\"auto\",\n    //backgroundColor:\"green\",\n  },\n  marginAutoContainer: {\n    width: 500,\n    height: 80,\n    display: 'flex',\n    backgroundColor: 'gold',\n  },\n  marginAutoItem: {\n    margin: 'auto'\n  },\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n\n      <ScrollingProvider>\n   <Menu />\n   \n  \n    <Section id=\"home\"  >\n      <LandingSection/>\n    </Section>\n    <Section id=\"portfolio\" >\n     <Portfolio/>\n    </Section>\n    <Section id=\"work\">\n    <div style={{height:\"100vh\", width:'100%', backgroundColor:'yellow'}}>\n\n</div>\n    </Section>\n    <Section id=\"about\">\n    <div style={{height:\"100vh\", width:'100%', backgroundColor:'purple'}}>\n\n</div>\n    </Section>\n    <Section id=\"fun\">\n    <div style={{height:\"100vh\", width:'100%', backgroundColor:'orange'}}>\n\n</div>\n    </Section>\n  </ScrollingProvider>\n      {/* <Grid\n        container\n        //spacing={4}\n      >\n        <Grid\n          item\n          lg={12}\n          sm={12}\n          xl={12}\n          xs={12}\n        >\n          <Carousel/>\n        </Grid>\n        <Grid\n          item\n          lg={12}\n          sm={12}\n          xl={12}\n          xs={12}\n        >\n          <AboutUs/>\n        </Grid>\n       \n       \n      </Grid> */}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport { RouteWithLayout } from './components';\nimport { Main as MainLayout, Minimal as MinimalLayout } from './layouts';\nimport  ProtectedRoute  from './ProtectedRoute';\n\nimport {\n  Home as HomeView,\n  HomePage as HomePageView,\n  ProductList as ProductListView,\n  Transactions as TransactionsView,\n  Typography as TypographyView,\n  Icons as IconsView,\n  Account as AccountView,\n  Settings as SettingsView,\n  SignUp as SignUpView,\n  SignIn as SignInView,\n  ResetPassword as ResetPasswordView,\n  NotFound as NotFoundView\n} from './views';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Redirect\n        exact\n        from=\"/\"\n        to=\"/homepage\"\n      />\n        <ProtectedRoute\n      component={HomePageView}\n        exact\n        layout={MainLayout}\n        path=\"/homepage\"/>\n       <ProtectedRoute\n      component={HomeView}\n        exact\n        layout={MainLayout}\n        path=\"/home\"/>\n      {/* <RouteWithLayout\n        component={DashboardView}\n        exact\n        layout={MainLayout}\n        path=\"/dashboard\"\n      /> */}\n      <RouteWithLayout\n        component={TransactionsView}\n        exact\n        layout={MainLayout}\n        path=\"/transactions\"\n      />\n      <RouteWithLayout\n        component={ProductListView}\n        exact\n        layout={MainLayout}\n        path=\"/products\"\n      />\n      <RouteWithLayout\n        component={TypographyView}\n        exact\n        layout={MainLayout}\n        path=\"/typography\"\n      />\n      <RouteWithLayout\n        component={IconsView}\n        exact\n        layout={MainLayout}\n        path=\"/icons\"\n      />\n      <RouteWithLayout\n        component={AccountView}\n        exact\n        layout={MainLayout}\n        path=\"/account\"\n      />\n      <RouteWithLayout\n        component={SettingsView}\n        exact\n        layout={MainLayout}\n        path=\"/settings\"\n      />\n      <RouteWithLayout\n        component={SignUpView}\n        exact\n        layout={MinimalLayout}\n        path=\"/sign-up\"\n      />\n      <RouteWithLayout\n        component={SignInView}\n        exact\n        layout={MinimalLayout}\n        path=\"/sign-in\"\n      />\n      <RouteWithLayout\n        component={ResetPasswordView}\n        exact\n        layout={MinimalLayout}\n        path=\"/reset-password\"\n      />\n      <RouteWithLayout\n        component={NotFoundView}\n        exact\n        layout={MinimalLayout}\n        path=\"/not-found\"\n      />\n      <Redirect to=\"/not-found\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Chart } from 'react-chartjs-2';\nimport { ThemeProvider } from '@material-ui/styles';\nimport validate from 'validate.js';\n\nimport { chartjs } from './helpers';\nimport theme from './theme';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './assets/scss/index.scss';\nimport validators from './common/validators';\nimport Routes from './Routes';\n\nconst browserHistory = createBrowserHistory();\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw: chartjs.draw\n});\n\nvalidate.validators = {\n  ...validate.validators,\n  ...validators\n};\n\nexport default class App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Router history={browserHistory}>\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}